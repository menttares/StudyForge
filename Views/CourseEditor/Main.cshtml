@model UpdateCourse

@{
    List<Subsection> Subsections = ViewData["Subsections"] as List<Subsection>;
    Course course = ViewData["User"] as Course;
}

<div class="row">
    <div class="d-flex p-2">
        <button id="editButton" class="btn btn-warning">Редактировать</button>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <table class="table table-striped" id="courseTable">
            <tbody>
                <tr>
                    <th scope="row">Имя курса:</th>
                    <td id="courseNameCell">@course.CourseName</td>
                </tr>
                <tr>
                    <th scope="row">Секция:</th>
                    <td id="sectionCell">@course.SectionName</td>
                </tr>
                <tr>
                    <th scope="row">Описание курса:</th>
                    <td id="descriptionCell">@course.CourseDescription</td>
                </tr>
                <tr>
                    <th scope="row">Закрыт курс:</th>
                    <td id="closedCell">@(course.CourseClosed ? "Да" : "Нет")</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>


<div id="editForm" style="display: none;">
    @using (Html.BeginForm("CoursePut", "CourseEditor", FormMethod.Post, new { id = "editCourseForm" }))
    {
        @Html.HiddenFor(m => m.CourseId)

        <div class="form-group">
            @Html.LabelFor(m => m.CourseName, "Имя курса:")
            @Html.TextBoxFor(m => m.CourseName, new { @class = "form-control", @id = "courseName" })
            <span>@Html.ValidationMessageFor(m => m.CourseName, "", new { @class = "text-danger" })</span>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.SectionId, "Секция:")
            @Html.DropDownListFor(m => m.SectionId, new SelectList(Subsections, "Id", "Name"), new
                {
                    @class =
                     "form-control",
                    @id = "section"
                })
            <span>@Html.ValidationMessageFor(m => m.SectionId, "", new { @class = "text-danger" })</span>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CourseDescription, "Описание курса:")
            @Html.TextAreaFor(m => m.CourseDescription, new { @class = "form-control", @id = "description", rows = 3 })
            <span>@Html.ValidationMessageFor(m => m.CourseDescription, "", new { @class = "text-danger" })</span>
        </div>
        <div class="form-check">
            @Html.CheckBoxFor(m => m.CourseClosed, new { @class = "form-check-input", @id = "closed" })
            <span>Закрыт курс</span>
        </div>
        <button type="submit" class="btn btn-success">Сохранить</button>
    }
</div>

<script>
    $(document).ready(function () {
        $("#editButton").click(function () {
            $("#courseTable").toggle();
            $("#editForm").toggle();
        });

        $("#editCourseForm").submit(function (event) {
            // Удаляем event.preventDefault() для стандартной отправки формы
            var form = $(this);
            var formData = form.serialize();

            $.ajax({
                url: form.attr("action"),
                method: form.attr("method"),
                data: formData,
                success: function (response) {
                    if (response.success) {
                        // Обновление значений в таблице
                        $("#courseNameCell").text($("#courseName").val());
                        $("#sectionCell").text($("#section option:selected").text());
                        $("#descriptionCell").text($("#description").val());
                        $("#closedCell").text($("#closed").is(":checked") ? "Да" : "Нет");

                        // Скрытие формы и показ таблицы
                        $("#editForm").hide();
                        $("#courseTable").show();
                    } else {
                        // Очистка старых сообщений об ошибках
                        $(".text-danger").text("");

                        // Показ новых сообщений об ошибках
                        $.each(response.errors, function (key, messages) {
                            var input = $("[name='" + key + "']");
                            var errorSpan = input.next("span");
                            if (errorSpan.length > 0) {
                                errorSpan.text(messages.join(", "));
                            }
                        });


                    }
                    Message("Успех!", "Данные курса обновлены");
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                }
            });

            return false; // Предотвращает стандартное поведение отправки формы
        });
    });
</script>
